Database description "Ships":
The database of naval ships that took part in World War II is under consideration. The database consists of the
following relations:
Classes(class, type, country, numGuns, bore, displacement)
Ships(name, class, launched)
Battles(name, date)
Outcomes(ship, battle, result)
Ships in classes all have the same general design. A class is normally assigned either the name of the first ship
built according to the corresponding design, or a name that is different from any ship name in the database. The
ship whose name is assigned to a class is called a lead ship.
The Classes relation includes the name of the class, type (can be either bb for a battle ship, or bc for a battle
cruiser), country the ship was built in, the number of main guns, gun caliber (bore diameter in inches), and
displacement (weight in tons). The Ships relation holds information about the ship name, the name of its
corresponding class, and the year the ship was launched. The Battles relation contains names and dates of battles
the ships participated in, and the Outcomes relation - the battle result for a given ship (may be sunk, damaged, or
OK, the last value meaning the ship survived the battle unharmed).
Notes: 1) The Outcomes relation may contain ships not present in the Ships relation. 2) A ship sunk can’t
participate in later battles. 3) For historical reasons, lead ships are referred to as head ships in many
exercises.4) A ship found in the Outcomes table but not in the Ships table is still considered in the database.
This is true even if it is sunk.

####################################################
Exercise: 14 (Serge I: 2002-11-05)
For the ships in the Ships table that have at least 10 guns, get the class, name, and country.

Solution:
SELECT Ships.class, name, country
FROM Ships JOIN Classes ON Ships.class = Classes.class WHERE numGuns >= 10

####################################################
Exercise: 31 (Serge I: 2002-10-22)
For ship classes with a gun caliber of 16 in. or more, display the class and the country.

Solution:
SELECT class, country
FROM Classes
WHERE bore >= 16

####################################################
Exercise: 32 (Serge I: 2003-02-17)
One of the characteristics of a ship is one-half the cube of the calibre of its main guns (mw).
Determine the average ship mw with an accuracy of two decimal places
for each country having ships in the database.

Solution:
SELECT country, CAST(AVG(bore * bore * bore / 2) AS NUMERIC(6,2)) AS weight
FROM
(SELECT name, class
FROM Ships
UNION
SELECT ship AS class, ship
FROM Outcomes) p JOIN Classes ON Classes.class = name OR Classes.class = p.class
GROUP BY country

####################################################
Exercise: 33 (Serge I: 2002-11-02)
Get the ships sunk in the North Atlantic battle.
Result set: ship.

Solution:
SELECT ship
FROM Outcomes
WHERE battle = 'North Atlantic' AND result = 'sunk'

####################################################
Exercise: 34 (Serge I: 2002-11-04)
In accordance with the Washington Naval Treaty concluded in the beginning of 1922, it was prohibited
to build battle ships with a displacement of more than 35 thousand tons.
Get the ships violating this treaty (only consider ships for which the year of launch is known).
List the names of the ships.

Solution:
SELECT DISTINCT name
FROM Ships, Classes
WHERE Classes.class = Ships.class AND type = 'bb' AND displacement > 35000 AND launched >= 1922

####################################################
Exercise: 36 (Serge I: 2003-02-17)
List the names of lead ships in the database (including the Outcomes table).

Solution:
SELECT name
FROM Ships
WHERE name = class

UNION

SELECT ship
FROM Outcomes, Classes
WHERE ship NOT IN (SELECT name FROM Ships) AND ship IN (SELECT class FROM Classes)

####################################################
Exercise: 37 (Serge I: 2003-02-17)
Find classes for which only one ship exists in the database (including the Outcomes table).

Solution:
SELECT ag.class
FROM (SELECT c.class, COUNT(name) AS n
FROM Classes c LEFT JOIN Ships s ON c.class = s.class
GROUP BY c.class
UNION ALL
SELECT c.class, COUNT(ship) AS n
FROM Classes c LEFT JOIN (SELECT DISTINCT ship FROM Outcomes) o ON c.class = o.ship
WHERE ship NOT IN (SELECT name FROM Ships)
GROUP BY c.class) AS ag
GROUP BY ag.class
HAVING SUM(n) = 1

####################################################
Exercise: 38 (Serge I: 2003-02-19)
Find countries that ever had classes of both battleships (‘bb’) and cruisers (‘bc’).

Solution:
SELECT country
FROM Classes
WHERE type = 'bb'
INTERSECT
SELECT country
FROM Classes
WHERE type = 'bc'

####################################################
Exercise: 39 (Serge I: 2003-02-14)
Find the ships that `survived for future battles`; that is, after being damaged in a battle,
they participated in another one, which occurred later.

Solution:
SELECT DISTINCT ship
FROM Outcomes io JOIN Battles ib ON io.battle = ib.name
WHERE result = 'damaged' AND EXISTS
(SELECT ship FROM Outcomes o JOIN Battles b ON o.battle = b.name
WHERE io.ship = o.ship AND b.date > ib.date)

####################################################
Exercise: 42 (Serge I: 2002-11-05)
Find the names of ships sunk at battles, along with the names of the corresponding battles.

Solution:
SELECT ship, battle
FROM Outcomes
WHERE result = 'sunk'

####################################################
Exercise: 43 (qwrqwr: 2011-10-28)
Get the battles that occurred in years when no ships were launched into water.

Solution:
SELECT name
FROM Battles
WHERE YEAR(date) NOT IN (SELECT launched FROM Ships WHERE launched IS NOT NULL)

####################################################
Exercise: 44 (Serge I: 2002-12-04)
Find all ship names beginning with the letter R.

Solution:
SELECT name
FROM Ships
WHERE name LIKE 'R%'
UNION
SELECT ship
FROM Outcomes
WHERE ship LIKE 'R%' AND ship NOT IN (SELECT name FROM Ships)

####################################################
Exercise: 45 (Serge I: 2002-12-04)
Find all ship names consisting of three or more words (e.g., King George V).
Consider the words in ship names to be separated by single spaces, and the ship names to have
no leading or trailing spaces.

Solution:
SELECT name
FROM Ships
WHERE name LIKE '% % %'
UNION
SELECT ship
FROM Outcomes
WHERE ship LIKE '% % %' AND ship NOT IN (SELECT name FROM Ships)

####################################################
Exercise: 46 (Serge I: 2003-02-14)
For each ship that participated in the Battle of Guadalcanal, get its name, displacement,
and the number of guns.

Solution:
SELECT o.ship, displacement, numGuns
FROM Outcomes o JOIN (Classes JOIN Ships ON Classes.class = Ships.class) ON o.ship = name
WHERE battle = 'Guadalcanal'

UNION

SELECT o.ship, displacement, numGuns
FROM Outcomes o LEFT JOIN Classes ON ship = class
WHERE o.battle = 'Guadalcanal' AND
o.ship NOT IN (SELECT name FROM Ships)

####################################################
Exercise: 47 (Serge I: 2019-06-07)
Find the countries that have lost all their ships in battles.

Solution:
WITH allShips AS
(SELECT country, name FROM Ships s JOIN Classes c ON s.class = c.class
UNION
SELECT country, ship FROM Outcomes o JOIN Classes c ON o.ship = c.class),
sunkedShips AS
(SELECT country, COUNT(*) AS num FROM allShips JOIN Outcomes o ON name = ship
WHERE result = 'sunk' GROUP BY country),
countedShips AS
(SELECT country, COUNT(*) AS num FROM allShips GROUP BY country)
SELECT s.country
FROM sunkedShips s, countedShips c
WHERE s.num = c.num AND s.country = c.country

####################################################
Exercise: 48 (Serge I: 2003-02-16)
Find the ship classes having at least one ship sunk in battles.

Solution:
SELECT c.class
FROM Classes c JOIN Outcomes o ON c.class = o.ship
WHERE result = 'sunk'
UNION
SELECT c.class
FROM Classes c JOIN Ships s ON c.class = s.class
WHERE name <> s.class AND
name IN (SELECT ship FROM Outcomes WHERE result = 'sunk')

####################################################
Exercise: 49 (Serge I: 2003-02-17)
Find the names of the ships having a gun caliber of 16 inches (including ships in the Outcomes table).

Solution:
SELECT name
FROM  Ships s JOIN Classes c ON s.class = c.class AND bore = 16
UNION
SELECT ship
FROM Outcomes o JOIN Classes c ON o.ship = c.class AND bore = 16

####################################################
Exercise: 50 (Serge I: 2002-11-05)
Find the battles in which Kongo-class ships from the Ships table were engaged.

Solution:
SELECT battle
FROM Outcomes o JOIN Classes c ON o.ship = c.class AND c.class = 'Kongo'
UNION
SELECT battle
FROM Outcomes o JOIN Ships s ON o.ship = s.name AND s.class = 'Kongo'

####################################################
Exercise: 51 (Serge I: 2003-02-17)
Find the names of the ships with the largest number of guns among all ships having the same displacement
(including ships in the Outcomes table).

Solution:
WITH existsCL AS
(SELECT c.class, c.displacement, c.numGuns
FROM Classes c
WHERE c.class IN (SELECT class FROM Ships)
OR c.class IN (SELECT ship FROM Outcomes)),
cl AS
(SELECT class
FROM Classes c JOIN (SELECT e.displacement, MAX(e.numGuns) as guns FROM existsCL e GROUP BY displacement) p
ON c.displacement = p.displacement AND numGuns = p.guns)
SELECT name
FROM Ships
WHERE class = ANY (SELECT * FROM cl)
UNION
SELECT ship
FROM Outcomes
WHERE ship = ANY(SELECT * FROM cl)

####################################################
Exercise: 52 (qwrqwr: 2010-04-23)
Determine the names of all ships in the Ships table that can be a Japanese battleship having at least
nine main guns with a caliber of less than 19 inches and a displacement of not more than 65 000 tons.

Solution:
SELECT name
FROM Ships s JOIN Classes c ON s.class = c.class
WHERE type = 'bb' AND country = 'Japan' AND
(numGuns >= 9 OR numGuns IS NULL) AND
(bore < 19 OR bore IS NULL) AND
(displacement <= 65000 OR displacement IS NULL)

####################################################
Exercise: 53 (Serge I: 2002-11-05)
With a precision of two decimal places, determine the average number of guns for the battleship classes.

Solution:
SELECT CAST(AVG(numGuns*1.0) AS Numeric(6,2)) as AVG_numGuns
FROM Classes
WHERE type = 'bb'

####################################################
Exercise: 54 (Serge I: 2003-02-14)
With a precision of two decimal places, determine the average number of guns for all battleships
(including the ones in the Outcomes table).

Solution:
WITH bbShips AS
(SELECT name, numGuns
FROM Ships s JOIN Classes c ON s.class = c.class
WHERE type = 'bb'
UNION
SELECT ship, numGuns
FROM Outcomes o JOIN Classes c ON o.ship = c.class
WHERE type = 'bb')
SELECT CAST(AVG(numGuns*1.0) AS Numeric(6,2)) as AVG_numGuns
FROM bbShips

####################################################
Exercise: 55 (Serge I: 2003-02-16)
For each class, determine the year the first ship of this class was launched.
If the lead ship’s year of launch is not known, get the minimum year of launch for the ships of this class.
Result set: class, year.

Solution:
SELECT c.class, MIN(launched) AS MIN_launched
FROM Classes c LEFT JOIN Ships s ON c.class = s.class
GROUP BY c.class

####################################################
Exercise: 56 (Serge I: 2003-02-16)
For each class, find out the number of ships of this class that were sunk in battles.
Result set: class, number of ships sunk.

Solution:
WITH ss AS
(SELECT class, ship, result
FROM Classes c LEFT JOIN Outcomes o ON ship = class
UNION
SELECT class, name, result
FROM Ships s JOIN Outcomes o ON ship = name)

SELECT class, SUM(sunks) AS sunks
FROM (SELECT class, CASE WHEN result = 'sunk' THEN 1 ELSE 0 END AS sunks FROM ss) p
GROUP BY class

####################################################
Exercise: 57 (Serge I: 2003-02-14)
For classes having irreparable combat losses and at least three ships in the database,
display the name of the class and the number of ships sunk.

Solution:
WITH ss AS
(SELECT class, ship, result
FROM Classes c LEFT JOIN Outcomes o ON ship = class
UNION
SELECT class, name, result
FROM Ships s JOIN Outcomes o ON ship = name),
ss3 AS
(SELECT c.class, name
FROM Ships s JOIN Classes c ON c.class = s.class
UNION
SELECT class, ship
FROM Outcomes JOIN Classes ON ship = class)

SELECT class, SUM(sunks) AS sunks
FROM (SELECT class, CASE WHEN result = 'sunk' THEN 1 ELSE 0 END AS sunks FROM ss) p
WHERE class IN (SELECT class FROM ss3 GROUP BY class HAVING COUNT(name) > 2)
GROUP BY class
HAVING SUM(sunks) > 0

####################################################
Exercise: 70 (Serge I: 2003-02-14)
Get the battles in which at least three ships from the same country took part.

Solution:
SELECT DISTINCT battle
FROM
(SELECT battle, ship, country
FROM Outcomes JOIN Classes ON ship = class
UNION
SELECT battle, name, country
FROM Outcomes JOIN
		(SELECT name, s.class, country
		FROM Ships s JOIN Classes c ON c.class = s.class
		WHERE name NOT IN (SELECT class FROM Ships)) ss ON ship = name) p
GROUP BY battle, country
HAVING COUNT(ship) >= 3

####################################################
Exercise: 73 (Serge I: 2009-04-17)
For each country, determine the battles in which the ships of this country did not participate.
Result set: country, battle.

Solution:
SELECT DISTINCT country, name
FROM Classes c, Battles b
EXCEPT
SELECT country, battle
FROM Classes c JOIN Outcomes ON ship = class
EXCEPT
SELECT country, battle
FROM Outcomes o JOIN Ships s ON ship = name JOIN Classes c ON c.class = s.class

####################################################
####################################################
